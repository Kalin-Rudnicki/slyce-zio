// !!! DO NOT MODIFY !!!
// File was automatically generated by slyce

package slyce.generate.parsers

// format: off

object Grammar extends _root_.slyce.parse.Parser {
  
  override type NTRoot = _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar
  
  // =====| Terminals |=====
  
  sealed abstract class Terminal(final val tokName: _root_.scala.Predef.String) extends _root_.slyce.core.Token
  object Terminal {
    final case class chars(text: _root_.scala.Predef.String, span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal("chars")
                                                                                                     with _root_.slyce.generate.parsers.Grammar.NonTerminal.Char.Lift
    final case class escChar(text: _root_.scala.Predef.String, span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal("escChar")
                                                                                                       with _root_.slyce.generate.parsers.Grammar.NonTerminal.Char.Lift
    final case class mode(text: _root_.scala.Predef.String, span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal("mode")
    final case class nonTerminal(text: _root_.scala.Predef.String, span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal("nonTerminal")
                                                                                                           with _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement.Lift
    final case class terminal(text: _root_.scala.Predef.String, span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal("terminal")
                                                                                                        with _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement.Lift
    
    final case class `\"`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal(""""\""""")
                                                                  with _root_.slyce.core.Token.Const
    final case class `(`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal(""""("""")
                                                                 with _root_.slyce.core.Token.Const
    final case class `)`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal("""")"""")
                                                                 with _root_.slyce.core.Token.Const
    final case class `*`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal(""""*"""")
                                                                 with _root_.slyce.core.Token.Const
                                                                 with _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType.Lift
    final case class `+`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal(""""+"""")
                                                                 with _root_.slyce.core.Token.Const
                                                                 with _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType.Lift
    final case class `.`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal(""""."""")
                                                                 with _root_.slyce.core.Token.Const
    final case class `:`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal("""":"""")
                                                                 with _root_.slyce.core.Token.Const
    final case class `;`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal("""";"""")
                                                                 with _root_.slyce.core.Token.Const
    final case class `<`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal(""""<"""")
                                                                 with _root_.slyce.core.Token.Const
                                                                 with _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType.Lift
    final case class `>`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal("""">"""")
                                                                 with _root_.slyce.core.Token.Const
                                                                 with _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType.Lift
    final case class `\\?`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal(""""?"""")
                                                                   with _root_.slyce.core.Token.Const
    final case class `@start:`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal(""""@start:"""")
                                                                       with _root_.slyce.core.Token.Const
    final case class `^`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal(""""^"""")
                                                                 with _root_.slyce.core.Token.Const
    final case class `|`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal(""""|"""")
                                                                 with _root_.slyce.core.Token.Const
    final case class `~`(span: _root_.slyce.core.Span.Highlight) extends _root_.slyce.generate.parsers.Grammar.Terminal(""""~"""")
                                                                 with _root_.slyce.core.Token.Const
    
    val __findRawTerminal: _root_.slyce.core.Span.Highlight => PartialFunction[_root_.scala.Predef.String, _root_.slyce.generate.parsers.Grammar.Terminal] =
      span => {
        case "\"" => Terminal.`\"`(span)
        case "(" => Terminal.`(`(span)
        case ")" => Terminal.`)`(span)
        case "*" => Terminal.`*`(span)
        case "+" => Terminal.`+`(span)
        case "." => Terminal.`.`(span)
        case ":" => Terminal.`:`(span)
        case ";" => Terminal.`;`(span)
        case "<" => Terminal.`<`(span)
        case ">" => Terminal.`>`(span)
        case "?" => Terminal.`\\?`(span)
        case "@start:" => Terminal.`@start:`(span)
        case "^" => Terminal.`^`(span)
        case "|" => Terminal.`|`(span)
        case "~" => Terminal.`~`(span)
      }
  }
  
  // =====| Non-Terminals |=====
  
  sealed abstract class NonTerminal(final val ntName: _root_.scala.Predef.String) extends _root_.slyce.core.NonTerminal
  object NonTerminal {
    
    sealed abstract class AnonList extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AnonList")
                                   with _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement.Lift
    object AnonList {
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element,
        _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList
        with _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement.Lift
      
      final case class _2(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`,
        _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList,
        _3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`,
        _4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList
        with _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement.Lift
      
      final case class _3(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`,
        _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList,
        _3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`,
        _4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList,
        _5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`,
        _6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList
        with _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement.Lift
      
    }
    
    final case class AnonList0Head(
      _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NT,
      _2: _root_.slyce.generate.parsers.Grammar.Terminal.`;`,
      _3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AnonList0Head") {
      
      final def toNonEmptyList: _root_.cats.data.NonEmptyList[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Head.Lift] = {
        @_root_.scala.annotation.tailrec
        def loop(queue: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail, stack: _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Head.Lift]): _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Head.Lift] =
          queue match {
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail._1(lift, _, next) => loop(next, lift :: stack)
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail._2 => stack.reverse
          }
        
        _root_.cats.data.NonEmptyList[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Head.Lift](this._1, loop(this._3, Nil))
      }
      
    }
    object AnonList0Head {
      
      type Lift = _root_.slyce.generate.parsers.Grammar.NonTerminal.NT
      
    }
    
    sealed abstract class AnonList0Tail extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AnonList0Tail")
    object AnonList0Tail {
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NT,
        _2: _root_.slyce.generate.parsers.Grammar.Terminal.`;`,
        _3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail
      
      case object _2 extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail
      
    }
    
    final case class AnonList1Head(
      _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList,
      _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AnonList1Head") {
      
      final def toNonEmptyList: _root_.cats.data.NonEmptyList[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Head.Lift] = {
        @_root_.scala.annotation.tailrec
        def loop(queue: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail, stack: _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Head.Lift]): _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Head.Lift] =
          queue match {
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail._1(_, lift, next) => loop(next, lift :: stack)
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail._2 => stack.reverse
          }
        
        _root_.cats.data.NonEmptyList[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Head.Lift](this._1, loop(this._2, Nil))
      }
      
    }
    object AnonList1Head {
      
      type Lift = _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList
      
    }
    
    sealed abstract class AnonList1Tail extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AnonList1Tail")
    object AnonList1Tail {
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.`|`,
        _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList,
        _3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail
      
      case object _2 extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail
      
    }
    
    final case class AnonList2Head(
      _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList,
      _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AnonList2Head") {
      
      final def toNonEmptyList: _root_.cats.data.NonEmptyList[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Head.Lift] = {
        @_root_.scala.annotation.tailrec
        def loop(queue: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail, stack: _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Head.Lift]): _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Head.Lift] =
          queue match {
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail._1(_, lift, next) => loop(next, lift :: stack)
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail._2 => stack.reverse
          }
        
        _root_.cats.data.NonEmptyList[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Head.Lift](this._1, loop(this._2, Nil))
      }
      
    }
    object AnonList2Head {
      
      type Lift = _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList
      
    }
    
    sealed abstract class AnonList2Tail extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AnonList2Tail")
    object AnonList2Tail {
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.`|`,
        _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList,
        _3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail
      
      case object _2 extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail
      
    }
    
    final case class AnonList3Head(
      _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair,
      _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AnonList3Head") {
      
      final def toNonEmptyList: _root_.cats.data.NonEmptyList[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Head.Lift] = {
        @_root_.scala.annotation.tailrec
        def loop(queue: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail, stack: _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Head.Lift]): _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Head.Lift] =
          queue match {
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail._1(_, lift, next) => loop(next, lift :: stack)
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail._2 => stack.reverse
          }
        
        _root_.cats.data.NonEmptyList[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Head.Lift](this._1, loop(this._2, Nil))
      }
      
    }
    object AnonList3Head {
      
      type Lift = _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair
      
    }
    
    sealed abstract class AnonList3Tail extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AnonList3Tail")
    object AnonList3Tail {
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.`|`,
        _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair,
        _3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail
      
      case object _2 extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail
      
    }
    
    final case class AnonList4Head(
      _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char,
      _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AnonList4Head") {
      
      final def toNonEmptyList: _root_.cats.data.NonEmptyList[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head.Lift] = {
        @_root_.scala.annotation.tailrec
        def loop(queue: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail, stack: _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head.Lift]): _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head.Lift] =
          queue match {
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._1(lift, next) => loop(next, lift :: stack)
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2 => stack.reverse
          }
        
        _root_.cats.data.NonEmptyList[_root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head.Lift](this._1, loop(this._2, Nil))
      }
      
    }
    object AnonList4Head {
      
      type Lift = _root_.slyce.generate.parsers.Grammar.NonTerminal.Char
      
    }
    
    sealed abstract class AnonList4Tail extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AnonList4Tail")
    object AnonList4Tail {
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char,
        _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail
      
      case object _2 extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail
      
    }
    
    final case class AssocNT(
      _1: _root_.slyce.generate.parsers.Grammar.Terminal.`~`,
      _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Head,
      _3: _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AssocNT")
      with _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody.Lift
    
    final case class AssocPair(
      _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType,
      _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AssocPair")
    
    sealed abstract class AssocType extends _root_.slyce.generate.parsers.Grammar.NonTerminal("AssocType") {
      
      final def lift: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType.Lift =
        this match {
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType._1(lift) => lift
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType._2(lift) => lift
        }
      
    }
    object AssocType {
      
      sealed trait Lift extends _root_.slyce.core.Token
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.`<`,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType
      
      final case class _2(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.`>`,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType
      
    }
    
    final case class BasicNT(
      _1: _root_.slyce.generate.parsers.Grammar.Terminal.`:`,
      _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Head,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("BasicNT")
      with _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT.Lift
    
    sealed abstract class Char extends _root_.slyce.generate.parsers.Grammar.NonTerminal("Char") {
      
      final def lift: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char.Lift =
        this match {
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.Char._1(lift) => lift
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.Char._2(lift) => lift
        }
      
    }
    object Char {
      
      sealed trait Lift extends _root_.slyce.core.Token
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.chars,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.Char
      
      final case class _2(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.escChar,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.Char
      
    }
    
    final case class Element(
      _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement,
      _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("Element")
    
    sealed abstract class ElementList extends _root_.slyce.generate.parsers.Grammar.NonTerminal("ElementList") {
      
      final def toList: _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList.Lift] = {
        @_root_.scala.annotation.tailrec
        def loop(queue: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList, stack: _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList.Lift]): _root_.scala.List[_root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList.Lift] =
          queue match {
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._1(lift, next) => loop(next, lift :: stack)
            case _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2 => stack.reverse
          }
        
        loop(this, Nil)
      }
      
    }
    object ElementList {
      
      type Lift = _root_.slyce.generate.parsers.Grammar.NonTerminal.Element
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element,
        _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList
      
      case object _2 extends _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList
      
    }
    
    final case class Grammar(
      _1: _root_.slyce.generate.parsers.Grammar.Terminal.`@start:`,
      _2: _root_.slyce.generate.parsers.Grammar.Terminal.mode,
      _3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Head,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("Grammar")
    
    sealed abstract class LiftElementList extends _root_.slyce.generate.parsers.Grammar.NonTerminal("LiftElementList")
    object LiftElementList {
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList
      
      final case class _2(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList,
        _2: _root_.slyce.generate.parsers.Grammar.Terminal.`^`,
        _3: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element,
        _4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList
      
    }
    
    final case class LiftNT(
      _1: _root_.slyce.generate.parsers.Grammar.Terminal.`^`,
      _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Head,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("LiftNT")
      with _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT.Lift
    
    sealed abstract class ListNT extends _root_.slyce.generate.parsers.Grammar.NonTerminal("ListNT")
                                 with _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody.Lift
    object ListNT {
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType,
        _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.ListNT
        with _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody.Lift
      
      final case class _2(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType,
        _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList,
        _3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`,
        _4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.ListNT
        with _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody.Lift
      
    }
    
    sealed abstract class ListType extends _root_.slyce.generate.parsers.Grammar.NonTerminal("ListType") {
      
      final def lift: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType.Lift =
        this match {
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(lift) => lift
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(lift) => lift
        }
      
    }
    object ListType {
      
      sealed trait Lift extends _root_.slyce.core.Token
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType
      
      final case class _2(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType
      
    }
    
    final case class NT(
      _1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal,
      _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("NT")
    
    sealed abstract class NTBody extends _root_.slyce.generate.parsers.Grammar.NonTerminal("NTBody") {
      
      final def lift: _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody.Lift =
        this match {
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody._1(lift) => lift
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody._2(lift) => lift
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody._3(lift) => lift
        }
      
    }
    object NTBody {
      
      sealed trait Lift
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody
      
      final case class _2(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListNT,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody
      
      final case class _3(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocNT,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody
      
    }
    
    sealed abstract class NonOptElement extends _root_.slyce.generate.parsers.Grammar.NonTerminal("NonOptElement") {
      
      final def lift: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement.Lift =
        this match {
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(lift) => lift
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(lift) => lift
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(lift) => lift
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(lift) => lift
        }
      
    }
    object NonOptElement {
      
      sealed trait Lift
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement
      
      final case class _2(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement
      
      final case class _3(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement
      
      final case class _4(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement
      
    }
    
    final case class Raw(
      _1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`,
      _2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head,
      _3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`,
    ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal("Raw")
      with _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement.Lift
    
    sealed abstract class StandardNT extends _root_.slyce.generate.parsers.Grammar.NonTerminal("StandardNT")
                                     with _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody.Lift {
      
      final def lift: _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT.Lift =
        this match {
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT._1(lift) => lift
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT._2(lift) => lift
        }
      
    }
    object StandardNT {
      
      sealed trait Lift
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.BasicNT,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT
        with _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody.Lift
      
      final case class _2(
        _1: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftNT,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT
        with _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody.Lift
      
    }
    
    sealed abstract class `Optional_?` extends _root_.slyce.generate.parsers.Grammar.NonTerminal("`Optional_?`") {
      
      final def toOption: _root_.scala.Option[_root_.slyce.generate.parsers.Grammar.Terminal.`\\?`] =
        this match {
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(lift) => _root_.scala.Some(lift)
          case _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2 => _root_.scala.None
        }
      
    }
    object `Optional_?` {
      
      final case class _1(
        _1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`,
      ) extends _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`
      
      case object _2 extends _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`
      
    }
    
  }
  
  // =====| Lexer |=====
  
  private lazy val lexerState0: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 0,
      yields = None,
    ) {
      case c if c >= 65 && c <= 90 => _root_.scala.Some(lexerState24) // 'A' - 'Z'
      case c if c >= 97 && c <= 122 => _root_.scala.Some(lexerState22) // 'a' - 'z'
      case 32 => _root_.scala.Some(lexerState15) // ' '
      case c if c >= 9 && c <= 10 => _root_.scala.Some(lexerState15) // '\t' - '\n'
      case 47 => _root_.scala.Some(lexerState26) // '/'
      case 124 => _root_.scala.Some(lexerState1) // '|'
      case 94 => _root_.scala.Some(lexerState1) // '^'
      case 63 => _root_.scala.Some(lexerState1) // '?'
      case c if c >= 58 && c <= 59 => _root_.scala.Some(lexerState1) // ':' - ';'
      case 46 => _root_.scala.Some(lexerState1) // '.'
      case c if c >= 40 && c <= 41 => _root_.scala.Some(lexerState1) // '(' - ')'
      case 34 => _root_.scala.Some(lexerState18) // '\"'
      case 126 => _root_.scala.Some(lexerState16) // '~'
      case 62 => _root_.scala.Some(lexerState16) // '>'
      case 60 => _root_.scala.Some(lexerState16) // '<'
      case c if c >= 42 && c <= 43 => _root_.scala.Some(lexerState16) // '*' - '+'
      case 64 => _root_.scala.Some(lexerState17) // '@'
    }
  
  private lazy val lexerState1: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 1,
      on = _ => _root_.scala.None,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
            _root_.slyce.parse.Lexer.Yields.Yield(
              span = (0, -1),
              build = _root_.slyce.generate.parsers.Grammar.Terminal.__findRawTerminal,
            ),
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Same,
        ),
      ),
    )
  
  private lazy val lexerState2: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 2,
      on = _ => _root_.scala.None,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Same,
        ),
      ),
    )
  
  private lazy val lexerState3: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 3,
      yields = None,
    ) {
      case 116 => _root_.scala.Some(lexerState28) // 't'
    }
  
  private lazy val lexerState4: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 4,
      yields = None,
    ) {
      case 34 => _root_.scala.Some(lexerState6) // '\"'
      case 92 => _root_.scala.Some(lexerState14) // '\\'
      case _ => _root_.scala.Some(lexerState9)
    }
  
  private lazy val lexerState5: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 5,
      on = _ => _root_.scala.None,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Same,
        ),
      ),
    )
  
  private lazy val lexerState6: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 6,
      on = _ => _root_.scala.None,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
            _root_.slyce.parse.Lexer.Yields.Yield(
              span = (0, -1),
              build = _root_.slyce.generate.parsers.Grammar.Terminal.__findRawTerminal,
            ),
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Pop,
        ),
      ),
    )
  
  private lazy val lexerState7: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 7,
      on = _ => _root_.scala.None,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
            _root_.slyce.parse.Lexer.Yields.Yield(
              span = (0, -1),
              build = _root_.slyce.generate.parsers.Grammar.Terminal.__findRawTerminal,
            ),
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Push(_root_.slyce.core.Lazy(lexerState20)),
        ),
      ),
    )
  
  private lazy val lexerState8: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 8,
      yields = None,
    ) {
      case 114 => _root_.scala.Some(lexerState3) // 'r'
    }
  
  private lazy val lexerState9: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 9,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
            _root_.slyce.parse.Lexer.Yields.Yield(
              span = (0, -1),
              build = span => text => _root_.slyce.generate.parsers.Grammar.Terminal.chars(text, span),
            ),
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Same,
        ),
      ),
    ) {
      case 92 => _root_.scala.None // '\\'
      case 34 => _root_.scala.None // '\"'
      case _ => _root_.scala.Some(lexerState9)
    }
  
  private lazy val lexerState10: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 10,
      yields = None,
    ) {
      case 10 => _root_.scala.Some(lexerState5) // '\n'
      case _ => _root_.scala.Some(lexerState10)
    }
  
  private lazy val lexerState11: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 11,
      on = _ => _root_.scala.None,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Pop,
        ),
      ),
    )
  
  private lazy val lexerState12: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 12,
      yields = None,
    ) {
      case 116 => _root_.scala.Some(lexerState27) // 't'
    }
  
  private lazy val lexerState13: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 13,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Same,
        ),
      ),
    ) {
      case 32 => _root_.scala.Some(lexerState13) // ' '
      case 9 => _root_.scala.Some(lexerState13) // '\t'
    }
  
  private lazy val lexerState14: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 14,
      yields = None,
    ) {
      case 116 => _root_.scala.Some(lexerState25) // 't'
      case 110 => _root_.scala.Some(lexerState25) // 'n'
      case 92 => _root_.scala.Some(lexerState25) // '\\'
      case 34 => _root_.scala.Some(lexerState25) // '\"'
    }
  
  private lazy val lexerState15: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 15,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Same,
        ),
      ),
    ) {
      case 32 => _root_.scala.Some(lexerState15) // ' '
      case c if c >= 9 && c <= 10 => _root_.scala.Some(lexerState15) // '\t' - '\n'
    }
  
  private lazy val lexerState16: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 16,
      on = _ => _root_.scala.None,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
            _root_.slyce.parse.Lexer.Yields.Yield(
              span = (0, -1),
              build = _root_.slyce.generate.parsers.Grammar.Terminal.__findRawTerminal,
            ),
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Same,
        ),
      ),
    )
  
  private lazy val lexerState17: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 17,
      yields = None,
    ) {
      case 115 => _root_.scala.Some(lexerState12) // 's'
    }
  
  private lazy val lexerState18: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 18,
      on = _ => _root_.scala.None,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
            _root_.slyce.parse.Lexer.Yields.Yield(
              span = (0, -1),
              build = _root_.slyce.generate.parsers.Grammar.Terminal.__findRawTerminal,
            ),
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Push(_root_.slyce.core.Lazy(lexerState4)),
        ),
      ),
    )
  
  private lazy val lexerState19: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 19,
      yields = None,
    ) {
      case 42 => _root_.scala.Some(lexerState23) // '*'
      case _ => _root_.scala.Some(lexerState19)
    }
  
  private lazy val lexerState20: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 20,
      yields = None,
    ) {
      case c if c >= 65 && c <= 90 => _root_.scala.Some(lexerState21) // 'A' - 'Z'
      case 32 => _root_.scala.Some(lexerState13) // ' '
      case 9 => _root_.scala.Some(lexerState13) // '\t'
      case 10 => _root_.scala.Some(lexerState11) // '\n'
    }
  
  private lazy val lexerState21: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 21,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
            _root_.slyce.parse.Lexer.Yields.Yield(
              span = (0, -1),
              build = span => text => _root_.slyce.generate.parsers.Grammar.Terminal.mode(text, span),
            ),
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Same,
        ),
      ),
    ) {
      case c if c >= 97 && c <= 122 => _root_.scala.Some(lexerState21) // 'a' - 'z'
      case c if c >= 65 && c <= 90 => _root_.scala.Some(lexerState21) // 'A' - 'Z'
      case c if c >= 48 && c <= 57 => _root_.scala.Some(lexerState21) // '0' - '9'
      case 95 => _root_.scala.Some(lexerState21) // '_'
    }
  
  private lazy val lexerState22: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 22,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
            _root_.slyce.parse.Lexer.Yields.Yield(
              span = (0, -1),
              build = span => text => _root_.slyce.generate.parsers.Grammar.Terminal.terminal(text, span),
            ),
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Same,
        ),
      ),
    ) {
      case c if c >= 97 && c <= 122 => _root_.scala.Some(lexerState22) // 'a' - 'z'
      case c if c >= 65 && c <= 90 => _root_.scala.Some(lexerState22) // 'A' - 'Z'
      case c if c >= 48 && c <= 57 => _root_.scala.Some(lexerState22) // '0' - '9'
      case 95 => _root_.scala.Some(lexerState22) // '_'
    }
  
  private lazy val lexerState23: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 23,
      yields = None,
    ) {
      case 47 => _root_.scala.Some(lexerState2) // '/'
      case _ => _root_.scala.Some(lexerState19)
    }
  
  private lazy val lexerState24: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 24,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
            _root_.slyce.parse.Lexer.Yields.Yield(
              span = (0, -1),
              build = span => text => _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal(text, span),
            ),
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Same,
        ),
      ),
    ) {
      case c if c >= 97 && c <= 122 => _root_.scala.Some(lexerState24) // 'a' - 'z'
      case c if c >= 65 && c <= 90 => _root_.scala.Some(lexerState24) // 'A' - 'Z'
      case c if c >= 48 && c <= 57 => _root_.scala.Some(lexerState24) // '0' - '9'
      case 95 => _root_.scala.Some(lexerState24) // '_'
    }
  
  private lazy val lexerState25: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 25,
      on = _ => _root_.scala.None,
      yields = Some(
        _root_.slyce.parse.Lexer.Yields(
          yields = _root_.scala.collection.immutable.List(
            _root_.slyce.parse.Lexer.Yields.Yield(
              span = (1, 1),
              build = span => text => _root_.slyce.generate.parsers.Grammar.Terminal.escChar(text, span),
            ),
          ),
          toMode = _root_.slyce.parse.Lexer.Yields.ToMode.Same,
        ),
      ),
    )
  
  private lazy val lexerState26: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 26,
      yields = None,
    ) {
      case 42 => _root_.scala.Some(lexerState19) // '*'
      case 47 => _root_.scala.Some(lexerState10) // '/'
    }
  
  private lazy val lexerState27: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 27,
      yields = None,
    ) {
      case 97 => _root_.scala.Some(lexerState8) // 'a'
    }
  
  private lazy val lexerState28: _root_.slyce.parse.Lexer.State[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer.State.fromPF[_root_.slyce.generate.parsers.Grammar.Terminal](
      id = 28,
      yields = None,
    ) {
      case 58 => _root_.scala.Some(lexerState7) // ':'
    }
  
  override val lexer: _root_.slyce.parse.Lexer[_root_.slyce.generate.parsers.Grammar.Terminal] =
    _root_.slyce.parse.Lexer[_root_.slyce.generate.parsers.Grammar.Terminal](lexerState0)
  
  // =====| Grammar |=====
  
  lazy val grammarState0: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 0,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`@start:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState351)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar => grammarState540
      },
    )
  
  lazy val grammarState1: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 1,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState354)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState172)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState363
      },
    )
  
  lazy val grammarState2: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 2,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState147)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState387)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState423
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState262
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState213
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState3: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 3,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState394
      },
    )
  
  lazy val grammarState4: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 4,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState369)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState20)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState5: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 5,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState6: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 6,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState6
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState7: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 7,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState312)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState8: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 8,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState416)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState199)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState57
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState244
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState110
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState9: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 9,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState9
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState10: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 10,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState425)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail => grammarState207
      },
    )
  
  lazy val grammarState11: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 11,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState71)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState326)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState12: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 12,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState471)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState344)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState377
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState131
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState101
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState291
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState13: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 13,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState471)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState344)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState377
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState247
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState168
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState291
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState14: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 14,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState24)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState15: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 15,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState16: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 16,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState17: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 17,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState192)
        case _root_.scala.Nil =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail => grammarState511
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NT => grammarState261
      },
    )
  
  lazy val grammarState18: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 18,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState23
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState231
      },
    )
  
  lazy val grammarState19: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 19,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState513)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState20: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 20,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState89
      },
    )
  
  lazy val grammarState21: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 21,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState310)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState22: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 22,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState23: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 23,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState63)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState24: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 24,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState407
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState25: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 25,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState26: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 26,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState27: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 27,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`|`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail._1(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`|`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail._1(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState28: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 28,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState81)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState29: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 29,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState30: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 30,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState563)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState473)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState78)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState13)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState347)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState431)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState319
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState30
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState356
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState128
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState114
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState498
      },
    )
  
  lazy val grammarState31: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 31,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState548
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState449
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState32: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 32,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState32
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState33: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 33,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState443)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState404)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState496)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState395)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState435)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState368)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState87
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState33
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState47
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState520
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState400
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState419
      },
    )
  
  lazy val grammarState34: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 34,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState272
      },
    )
  
  lazy val grammarState35: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 35,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState35
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState36: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 36,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState70)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState37: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 37,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState443)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState404)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState496)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState395)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState435)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState368)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState87
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState37
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState47
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState520
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState400
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState419
      },
    )
  
  lazy val grammarState38: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 38,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState38
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState39: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 39,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState408)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState564)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState40: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 40,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState41: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 41,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState157
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState533
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState42: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 42,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState487)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState478)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState65
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState251
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState43: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 43,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState473)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState431)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState297
      },
    )
  
  lazy val grammarState44: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 44,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState303)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState333)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState509
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState262
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState267
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState45: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 45,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState46: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 46,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState50)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState47: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 47,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState48: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 48,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState49: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 49,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState204)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState345
      },
    )
  
  lazy val grammarState50: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 50,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState192)
        case _root_.scala.Nil =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail => grammarState365
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NT => grammarState261
      },
    )
  
  lazy val grammarState51: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 51,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState446)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState45)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState409)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState135)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState48
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState469
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState49
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState399
      },
    )
  
  lazy val grammarState52: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 52,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState230
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState553
      },
    )
  
  lazy val grammarState53: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 53,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState89
      },
    )
  
  lazy val grammarState54: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 54,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState461)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState148)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState55: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 55,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState416)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState199)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState57
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState244
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState110
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState56: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 56,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState41)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState3)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState57: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 57,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState416)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState354)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState199)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState172)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState57
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState123
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState110
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState58: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 58,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState99
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState59: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 59,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState225
      },
    )
  
  lazy val grammarState60: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 60,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState61: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 61,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState487)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState478)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState542
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState251
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState62: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 62,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState192)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Head => grammarState108
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NT => grammarState46
      },
    )
  
  lazy val grammarState63: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 63,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState64: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 64,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState64
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState65: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 65,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState487)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState478)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState65
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState251
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState66: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 66,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState223)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState414)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState567
      },
    )
  
  lazy val grammarState67: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 67,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState68: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 68,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState68
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState69: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 69,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState70: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 70,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState71: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 71,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState307
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState533
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState72: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 72,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState95)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState100)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState524)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState403)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState362
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState178
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState318
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState212
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState410
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState313
      },
    )
  
  lazy val grammarState73: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 73,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState56
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState499
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState74: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 74,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState59)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState75: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 75,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState149)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState76: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 76,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState77: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 77,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState78: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 78,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState79: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 79,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState486
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState14
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState80: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 80,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState81: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 81,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState82: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 82,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState83: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 83,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState518)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState268)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState83
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState29
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState282
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState84: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 84,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState84
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState85: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 85,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState86: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 86,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState385)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState388)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState87: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 87,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState88: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 88,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState255
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState533
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState89: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 89,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState90: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 90,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState91: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 91,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState223)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState414)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState372
      },
    )
  
  lazy val grammarState92: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 92,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState11
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState499
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState93: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 93,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState471)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState344)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState377
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState380
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState168
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState291
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState94: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 94,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState95: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 95,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState153
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState411
      },
    )
  
  lazy val grammarState96: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 96,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState451
      },
    )
  
  lazy val grammarState97: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 97,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState185)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState92)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState97
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState317
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState98: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 98,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState352)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState557)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState99: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 99,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState99
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState100: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 100,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState101: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 101,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState194)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState102: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 102,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState103: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 103,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState104: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 104,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState104
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState105: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 105,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState383)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState106: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 106,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState433
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState107: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 107,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState108: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 108,
      onTerm = {
        case _root_.scala.Nil =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_2: _root_.slyce.generate.parsers.Grammar.Terminal.mode), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`@start:`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState109: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 109,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState290)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState467)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState421)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState12)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState181
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState159
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState111
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState506
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState528
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState452
      },
    )
  
  lazy val grammarState110: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 110,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState278)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState132
      },
    )
  
  lazy val grammarState111: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 111,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListNT._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState249)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState112: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 112,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState113: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 113,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState303)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState333)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState485
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState262
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState267
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState114: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 114,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState432)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState25
      },
    )
  
  lazy val grammarState115: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 115,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState294
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState235
      },
    )
  
  lazy val grammarState116: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 116,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState117: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 117,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState416)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState199)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState534
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState390
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState110
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState118: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 118,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState305)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState119: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 119,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState329)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState160
      },
    )
  
  lazy val grammarState120: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 120,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState165)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState301)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState339
      },
    )
  
  lazy val grammarState121: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 121,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState122: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 122,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState329)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState160
      },
    )
  
  lazy val grammarState123: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 123,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState124: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 124,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState125: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 125,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState404)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState368)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState391
      },
    )
  
  lazy val grammarState126: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 126,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState98
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState361
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState127: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 127,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState272
      },
    )
  
  lazy val grammarState128: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 128,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState129: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 129,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListNT._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState130: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 130,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState458)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState131: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 131,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState488)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState66)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState132: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 132,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState133: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 133,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState147)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState387)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState536
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState213
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState134: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 134,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_2: _root_.slyce.generate.parsers.Grammar.Terminal.`^`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_2: _root_.slyce.generate.parsers.Grammar.Terminal.`^`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState135: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 135,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState174)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState203)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState441
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState375
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState209
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState122
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState136: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 136,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState451
      },
    )
  
  lazy val grammarState137: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 137,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState349)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState96)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState138: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 138,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState139: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 139,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState140: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 140,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState227
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState361
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState141: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 141,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState354)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState172)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState363
      },
    )
  
  lazy val grammarState142: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 142,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState63)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState143: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 143,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState327
      },
    )
  
  lazy val grammarState144: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 144,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState293)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState145: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 145,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState80)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState77
      },
    )
  
  lazy val grammarState146: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 146,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState147: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 147,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState269
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState501
      },
    )
  
  lazy val grammarState148: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 148,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState451
      },
    )
  
  lazy val grammarState149: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 149,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState150: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 150,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState216)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState151: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 151,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState376)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState515)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState252
      },
    )
  
  lazy val grammarState152: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 152,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState393)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState153: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 153,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState94)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState154: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 154,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState155: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 155,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState420
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState156: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 156,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState350
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState157: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 157,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState512)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState158: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 158,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState343)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState126)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState239
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState358
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState159: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 159,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState260)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState223)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState508)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState414)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState186
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState434
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState565
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState160: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 160,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState161: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 161,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState523)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState162: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 162,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState416)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState199)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState57
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState244
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState110
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState163: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 163,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState155)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState164: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 164,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState165: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 165,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState166: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 166,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState472)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState167: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 167,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState143)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState168: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 168,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState555)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState169: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 169,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState459)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState214
      },
    )
  
  lazy val grammarState170: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 170,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState166
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState553
      },
    )
  
  lazy val grammarState171: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 171,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState172: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 172,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState173: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 173,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListNT), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState174: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 174,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState389
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState231
      },
    )
  
  lazy val grammarState175: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 175,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState321
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState58
      },
    )
  
  lazy val grammarState176: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 176,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState177: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 177,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`>`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`>`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`>`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`>`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState178: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 178,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState115)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState165)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState424)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState301)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState382
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState558
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState330
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState179: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 179,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_2: _root_.slyce.generate.parsers.Grammar.Terminal.`^`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState180: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 180,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState324
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState181: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 181,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState182: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 182,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState513)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState183: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 183,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState75
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState58
      },
    )
  
  lazy val grammarState184: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 184,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState54
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState499
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState185: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 185,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState353
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState58
      },
    )
  
  lazy val grammarState186: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 186,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState260)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState354)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState508)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState172)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState186
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState123
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState565
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState187: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 187,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState425)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail => grammarState453
      },
    )
  
  lazy val grammarState188: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 188,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState189: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 189,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState76
      },
    )
  
  lazy val grammarState190: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 190,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState191: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 191,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState563)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState473)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState78)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState13)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState347)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState431)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState319
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState30
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState356
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState234
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState114
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState498
      },
    )
  
  lazy val grammarState192: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 192,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState507)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`~`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState560)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState116)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState415)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState201)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.BasicNT => grammarState448
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocNT => grammarState198
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT => grammarState288
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListNT => grammarState173
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState109
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftNT => grammarState364
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody => grammarState450
      },
    )
  
  lazy val grammarState193: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 193,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState194: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 194,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState303)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState333)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState113
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState267
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState195: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 195,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState394
      },
    )
  
  lazy val grammarState196: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 196,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState327
      },
    )
  
  lazy val grammarState197: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 197,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState472)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState198: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 198,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocNT), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState199: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 199,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState224
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState499
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState200: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 200,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState201: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 201,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState202: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 202,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState447)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail => grammarState27
      },
    )
  
  lazy val grammarState203: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 203,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState543
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState361
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState204: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 204,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState205: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 205,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState205
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState206: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 206,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState207: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 207,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`|`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail._1(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState208: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 208,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState472)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState209: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 209,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState554)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState210: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 210,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState211: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 211,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState394
      },
    )
  
  lazy val grammarState212: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 212,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState480)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState213: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 213,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState437)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState246
      },
    )
  
  lazy val grammarState214: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 214,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState215: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 215,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState74
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState533
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState216: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 216,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState217: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 217,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState521)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState218: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 218,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_2: _root_.slyce.generate.parsers.Grammar.Terminal.`^`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_2: _root_.slyce.generate.parsers.Grammar.Terminal.`^`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState219: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 219,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState220: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 220,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState258)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState221: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 221,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState491
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState499
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState222: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 222,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState286)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState223: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 223,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState224: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 224,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState474)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState141)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState225: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 225,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState226: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 226,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState227: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 227,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState494)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState189)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState228: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 228,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState451
      },
    )
  
  lazy val grammarState229: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 229,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState279)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState82
      },
    )
  
  lazy val grammarState230: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 230,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState472)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState231: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 231,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState463
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState232: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 232,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.chars), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Char._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.chars), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Char._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.chars), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Char._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState233: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 233,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState233
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState234: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 234,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_2: _root_.slyce.generate.parsers.Grammar.Terminal.`^`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState235: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 235,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState233
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState236: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 236,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState336
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState237: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 237,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState208
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState553
      },
    )
  
  lazy val grammarState238: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 238,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState239: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 239,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState343)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState126)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState378
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState262
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState358
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState240: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 240,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState260)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState15)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState508)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState281)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState295
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState527
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState565
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState241: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 241,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState242: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 242,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState28
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState106
      },
    )
  
  lazy val grammarState243: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 243,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState244: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 244,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState245: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 245,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState170)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState221)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState539
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState118
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState217
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState275
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState246: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 246,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState247: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 247,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState517)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState43)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState248: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 248,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState479)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState249: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 249,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState360)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState26)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState107)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState93)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState210
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState240
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState129
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState257
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState547
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState60
      },
    )
  
  lazy val grammarState250: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 250,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState251: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 251,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState80)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState77
      },
    )
  
  lazy val grammarState252: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 252,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState253: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 253,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState439)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState1)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState254: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 254,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState32
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState255: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 255,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState442)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState256: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 256,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState245)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState373)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState257: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 257,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState314)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState258: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 258,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState334
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState259: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 259,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState79)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState541)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState260: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 260,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState36
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState235
      },
    )
  
  lazy val grammarState261: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 261,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState17)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState262: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 262,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_2: _root_.slyce.generate.parsers.Grammar.Terminal.`^`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_2: _root_.slyce.generate.parsers.Grammar.Terminal.`^`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState263: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 263,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState264: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 264,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`^`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftNT(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState265: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 265,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState384)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState266: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 266,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState267: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 267,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState437)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState246
      },
    )
  
  lazy val grammarState268: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 268,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState550
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState361
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState269: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 269,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState513)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState270: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 270,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState190)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState271: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 271,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState254
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState272: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 272,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState273: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 273,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState551
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState499
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState274: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 274,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState88)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState195)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState275: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 275,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState459)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState214
      },
    )
  
  lazy val grammarState276: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 276,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState376)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState515)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState374
      },
    )
  
  lazy val grammarState277: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 277,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState322)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState125)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState278: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 278,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState279: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 279,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState280: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 280,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState342)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState285)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState281: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 281,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState282: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 282,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState437)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState246
      },
    )
  
  lazy val grammarState283: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 283,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState284: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 284,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState549
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState285: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 285,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState89
      },
    )
  
  lazy val grammarState286: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 286,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState483
      },
    )
  
  lazy val grammarState287: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 287,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState468)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState288: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 288,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState289: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 289,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState513)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState290: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 290,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState531
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState505
      },
    )
  
  lazy val grammarState291: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 291,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState329)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState160
      },
    )
  
  lazy val grammarState292: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 292,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState236)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState293: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 293,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState354)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState172)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState138
      },
    )
  
  lazy val grammarState294: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 294,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState70)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState295: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 295,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState260)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState354)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState508)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState172)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState295
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState123
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState565
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState296: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 296,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Head(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState297: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 297,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState298: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 298,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState298
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState299: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 299,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`~`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocNT(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState300: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 300,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState127)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState301: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 301,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState302: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 302,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState473)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState431)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState176
      },
    )
  
  lazy val grammarState303: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 303,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState182
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState501
      },
    )
  
  lazy val grammarState304: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 304,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState242)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState398)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState283)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState412)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState219)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState386)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState379
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState304
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState401
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState103
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState229
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState112
      },
    )
  
  lazy val grammarState305: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 305,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState398)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState386)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState561
      },
    )
  
  lazy val grammarState306: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 306,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState459)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState214
      },
    )
  
  lazy val grammarState307: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 307,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState526)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState308: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 308,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState483
      },
    )
  
  lazy val grammarState309: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 309,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState538)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState310: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 310,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState483
      },
    )
  
  lazy val grammarState311: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 311,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState312: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 312,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState185)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState92)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState544
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState317
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState313: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 313,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState314: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 314,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState563)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState347)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState78)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState13)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState319
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState191
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState114
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState498
      },
    )
  
  lazy val grammarState315: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 315,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState315
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState316: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 316,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState63)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState317: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 317,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState80)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState77
      },
    )
  
  lazy val grammarState318: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 318,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState72)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail => grammarState430
      },
    )
  
  lazy val grammarState319: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 319,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState320: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 320,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState321: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 321,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState149)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState322: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 322,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState492)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState273)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState162
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState514
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState152
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState169
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState323: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 323,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState271)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState324: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 324,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState406
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState325: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 325,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState64
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState326: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 326,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState394
      },
    )
  
  lazy val grammarState327: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 327,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState328: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 328,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState316
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState231
      },
    )
  
  lazy val grammarState329: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 329,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState330: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 330,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState278)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState132
      },
    )
  
  lazy val grammarState331: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 331,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState259
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState361
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState332: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 332,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState84
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState333: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 333,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState4
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState361
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState334: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 334,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState205
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState335: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 335,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState336: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 336,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState457
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState337: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 337,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState147)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState387)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState2
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState213
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState338: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 338,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState137
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState499
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState339: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 339,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState340: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 340,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState222
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState14
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState341: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 341,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState242)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState398)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState283)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState412)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState219)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState386)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState379
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState304
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState401
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState134
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState229
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState112
      },
    )
  
  lazy val grammarState342: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 342,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState248
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState449
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState343: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 343,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState19
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState501
      },
    )
  
  lazy val grammarState344: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 344,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState503
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState361
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState345: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 345,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Element(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState346: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 346,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState70)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState347: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 347,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState348: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 348,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState349: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 349,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState300
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState323
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState350: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 350,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState68
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState351: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 351,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.mode) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState62)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState352: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 352,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState167
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState449
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState353: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 353,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState149)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState354: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 354,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState355: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 355,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState356: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 356,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState357: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 357,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState302)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState358: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 358,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState437)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState246
      },
    )
  
  lazy val grammarState359: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 359,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState360: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 360,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState150
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState332
      },
    )
  
  lazy val grammarState361: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 361,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState337)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState362: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 362,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState363: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 363,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState364: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 364,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftNT), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState365: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 365,
      onTerm = {
        case _root_.scala.Nil =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_2: _root_.slyce.generate.parsers.Grammar.Terminal.`;`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NT), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Head(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState366: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 366,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState149)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState367: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 367,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.escChar), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Char._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.escChar), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Char._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.escChar), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Char._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState368: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 368,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState369: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 369,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState530
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState449
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState370: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 370,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState151)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState371: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 371,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState6
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState372: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 372,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState373: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 373,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState398)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState386)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState359
      },
    )
  
  lazy val grammarState374: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 374,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState375: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 375,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState402)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState276)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState376: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 376,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState377: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 377,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState416)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState199)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState534
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState390
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState110
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState378: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 378,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState343)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState126)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState378
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState29
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState358
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState379: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 379,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState380: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 380,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState429)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState396)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState381: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 381,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState447)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail => grammarState444
      },
    )
  
  lazy val grammarState382: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 382,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState115)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState354)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState424)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState172)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState382
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState123
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState330
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState383: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 383,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState384: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 384,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState272
      },
    )
  
  lazy val grammarState385: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 385,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState492)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState273)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState162
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState489
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState130
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState169
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState386: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 386,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState387: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 387,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState280
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState361
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState388: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 388,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState165)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState301)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState417
      },
    )
  
  lazy val grammarState389: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 389,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState63)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState390: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 390,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState391: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 391,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState392: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 392,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState147)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState387)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState392
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState29
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState213
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState393: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 393,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState487)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState478)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState61
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState251
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState394: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 394,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState395: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 395,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState18)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState331)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState117
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState277
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState475
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState119
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState396: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 396,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState15)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState281)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState171
      },
    )
  
  lazy val grammarState397: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 397,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`<`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`<`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`<`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`<`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState398: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 398,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState399: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 399,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState400: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 400,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState121)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState90
      },
    )
  
  lazy val grammarState401: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 401,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState402: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 402,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState52)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState184)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState8
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState370
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState7
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState481
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState403: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 403,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState18)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState331)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState117
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState86
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState475
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState119
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState404: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 404,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState405: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 405,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState519
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState14
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState406: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 406,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState406
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState407: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 407,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState298
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState408: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 408,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState144
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState559
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState409: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 409,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState410: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 410,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState188)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState154
      },
    )
  
  lazy val grammarState411: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 411,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState35
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState412: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 412,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState471)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState344)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState377
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState256
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState101
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState291
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState413: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 413,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState414: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 414,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState415: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 415,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState443)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState435)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState496)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState395)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState87
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Head => grammarState537
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState33
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState187
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState400
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState419
      },
    )
  
  lazy val grammarState416: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 416,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState346
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState235
      },
    )
  
  lazy val grammarState417: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 417,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState418: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 418,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState419: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 419,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState420: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 420,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState104
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState421: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 421,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState422: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 422,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState423: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 423,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState147)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState387)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState423
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState29
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState213
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState424: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 424,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState253
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState499
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState425: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 425,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState443)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState435)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState496)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState395)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState87
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState33
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState10
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState400
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState419
      },
    )
  
  lazy val grammarState426: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 426,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState161
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState323
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState427: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 427,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState428: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 428,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState416)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState199)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState534
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState390
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState110
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState429: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 429,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState170)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState221)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState539
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState287
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState163
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState275
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState430: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 430,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`|`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail._1(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState431: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 431,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState432: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 432,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState433: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 433,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState433
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState434: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 434,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState435: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 435,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState436: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 436,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState215)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState211)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState437: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 437,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState438: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 438,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState274
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState499
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState439: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 439,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState456
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState559
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState440: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 440,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState76
      },
    )
  
  lazy val grammarState441: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 441,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState416)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState199)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState534
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState390
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState110
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState442: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 442,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState225
      },
    )
  
  lazy val grammarState443: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 443,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState470
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState371
      },
    )
  
  lazy val grammarState444: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 444,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Head(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Head(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState445: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 445,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState446: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 446,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState105
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState535
      },
    )
  
  lazy val grammarState447: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 447,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`<`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState397)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`>`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState177)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair => grammarState202
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType => grammarState51
      },
    )
  
  lazy val grammarState448: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 448,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.BasicNT), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState449: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 449,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState156)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState450: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 450,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.NTBody), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NT(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState451: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 451,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState452: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 452,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState453: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 453,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Head(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState454: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 454,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState76
      },
    )
  
  lazy val grammarState455: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 455,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState456: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 456,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState532)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState457: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 457,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState457
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState458: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 458,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState487)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState478)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState42
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState251
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState459: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 459,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState460: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 460,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState80)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState77
      },
    )
  
  lazy val grammarState461: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 461,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState477
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState323
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState462: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 462,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState462
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState463: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 463,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState463
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState464: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 464,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState465: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 465,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState466: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 466,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState507)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState415)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.BasicNT => grammarState448
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.StandardNT => grammarState299
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftNT => grammarState364
      },
    )
  
  lazy val grammarState467: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 467,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState468: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 468,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState15)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState281)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState464
      },
    )
  
  lazy val grammarState469: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 469,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState376)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState515)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState311
      },
    )
  
  lazy val grammarState470: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 470,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState67)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState471: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 471,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState142
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState231
      },
    )
  
  lazy val grammarState472: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 472,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState473: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 473,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState474: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 474,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState309
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState559
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState475: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 475,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState158)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState476: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 476,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState477: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 477,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState34)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState478: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 478,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState436
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState499
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState479: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 479,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState327
      },
    )
  
  lazy val grammarState480: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 480,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState443)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState435)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState496)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState395)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState87
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState510
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState400
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState419
      },
    )
  
  lazy val grammarState481: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 481,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState459)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState214
      },
    )
  
  lazy val grammarState482: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 482,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState482
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState483: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 483,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState484: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 484,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState483
      },
    )
  
  lazy val grammarState485: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 485,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState303)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState333)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState485
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState29
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState267
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState486: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 486,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState484)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState487: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 487,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState366
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState58
      },
    )
  
  lazy val grammarState488: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 488,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState170)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState221)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState539
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState546
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState220
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState275
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState489: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 489,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState120)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState490: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 490,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState72)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Tail => grammarState296
      },
    )
  
  lazy val grammarState491: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 491,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState522)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState136)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState492: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 492,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState197
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState553
      },
    )
  
  lazy val grammarState493: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 493,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState327
      },
    )
  
  lazy val grammarState494: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 494,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState21
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState14
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState495: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 495,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState496: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 496,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState497: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 497,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState404)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState368)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState445
      },
    )
  
  lazy val grammarState498: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 498,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState499: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 499,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState133)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState500: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 500,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState501: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 501,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState38
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState502: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 502,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState503: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 503,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState340)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState440)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState504: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 504,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState242)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState219)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState283)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState412)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState379
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState341
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState229
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState112
      },
    )
  
  lazy val grammarState505: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 505,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState9
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState506: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 506,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState504)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState507: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 507,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState95)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState100)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState524)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState403)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList2Head => grammarState264
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState362
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState178
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState490
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState212
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState410
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState313
      },
    )
  
  lazy val grammarState508: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 508,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState328)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState413)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState348)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState140)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState418
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState428
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState39
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState499
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState516
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState139
      },
    )
  
  lazy val grammarState509: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 509,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState303)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState333)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState509
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState29
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState267
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState510: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 510,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState443)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState404)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState496)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState395)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState435)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState368)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState87
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState37
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState47
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState218
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState400
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState419
      },
    )
  
  lazy val grammarState511: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 511,
      onTerm = {
        case _root_.scala.Nil =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_3: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_2: _root_.slyce.generate.parsers.Grammar.Terminal.`;`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.NT), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList0Tail._1(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState512: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 512,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState225
      },
    )
  
  lazy val grammarState513: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 513,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw(_1, _2, _3), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState514: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 514,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState497)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState515: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 515,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`:`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`*`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._1(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState516: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 516,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState329)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState160
      },
    )
  
  lazy val grammarState517: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 517,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState170)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState221)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState539
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState357
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState292
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState275
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState518: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 518,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState289
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState501
      },
    )
  
  lazy val grammarState519: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 519,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState308)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState520: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 520,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState521: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 521,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState175)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState438)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState325
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState145
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState522: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 522,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState237)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState427)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState465)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState338)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState529
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState55
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList => grammarState265
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState323
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState306
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState455
      },
    )
  
  lazy val grammarState523: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 523,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState272
      },
    )
  
  lazy val grammarState524: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 524,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.terminal), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState525: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 525,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`+`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType._2(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState526: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 526,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState225
      },
    )
  
  lazy val grammarState527: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 527,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState528: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 528,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState243)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState16
      },
    )
  
  lazy val grammarState529: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 529,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._3(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState530: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 530,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState196)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState531: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 531,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState500)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState532: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 532,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState354)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState172)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState138
      },
    )
  
  lazy val grammarState533: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 533,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState284)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState534: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 534,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState416)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState354)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState199)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState172)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState534
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState123
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState110
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState535: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 535,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState462
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState536: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 536,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState147)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState387)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState392
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState262
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState213
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState537: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 537,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList1Head), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`:`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.BasicNT(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState538: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 538,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState354)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState172)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState138
      },
    )
  
  lazy val grammarState539: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 539,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState416)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList._1(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState164)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState495)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState199)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState476)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState22)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState502
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState57
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState244
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState200
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState110
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState102
      },
    )
  
  lazy val grammarState540: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 540,
      onTerm = {
        case _root_.scala.Nil =>
          _root_.slyce.parse.Grammar.State.Action.Accept[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(root: _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar), _) :: _root_.scala.Nil => root
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState541: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 541,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState525)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState250)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState76
      },
    )
  
  lazy val grammarState542: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 542,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState487)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState478)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState542
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState263
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState251
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState543: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 543,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState405)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState454)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState544: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 544,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState185)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState92)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState97
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState317
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState545: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 545,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState518)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState268)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState83
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState355
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState262
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState282
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState546: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 546,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState91)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState547: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 547,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState238)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState69
      },
    )
  
  lazy val grammarState548: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 548,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState493)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState549: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 549,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState183)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState226)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState206)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState73)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState335)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState5)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState146
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState315
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState241
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ElementList => grammarState179
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState460
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState552
      },
    )
  
  lazy val grammarState550: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 550,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState31)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState53)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState551: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 551,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState426)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState228)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState552: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 552,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState553: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 553,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState482
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState554: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 554,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState518)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState268)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState545
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState282
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState555: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 555,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState303)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState85)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState193)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState333)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Raw => grammarState266
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element => grammarState44
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement => grammarState267
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList => grammarState566
      },
    )
  
  lazy val grammarState556: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 556,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState562
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState124
      },
    )
  
  lazy val grammarState557: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 557,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState422)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState40)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState89
      },
    )
  
  lazy val grammarState558: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 558,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`|`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.Element), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._1(_1, _2), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState559: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 559,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState180)
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState560: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 560,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`<`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState397)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`>`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState177)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocType => grammarState51
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList3Head => grammarState466
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AssocPair => grammarState381
      },
    )
  
  lazy val grammarState561: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 561,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_6: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_5: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`.`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._3(_1, _2, _3, _4, _5, _6), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState562: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 562,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState562
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Tail => grammarState320
      },
    )
  
  lazy val grammarState563: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 563,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.chars) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState232)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.escChar) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState367)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList4Head => grammarState270
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.Char => grammarState556
      },
    )
  
  lazy val grammarState564: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 564,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState354)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState172)
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType => grammarState363
      },
    )
  
  lazy val grammarState565: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 565,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Shift[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState278)
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              toState,
              stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?`._2, stack)
          }
      },
      onNT = {
        case _: _root_.slyce.generate.parsers.Grammar.NonTerminal.`Optional_?` => grammarState132
      },
    )
  
  lazy val grammarState566: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 566,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`)`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_1: _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.NonOptElement._4(_1), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  lazy val grammarState567: _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar.State[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](
      id = 567,
      onTerm = {
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`^`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`;`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\"`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`+`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.terminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`(`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`\\?`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`.`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.nonTerminal) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
        case (tok: _root_.slyce.generate.parsers.Grammar.Terminal.`*`) :: _ =>
          _root_.slyce.parse.Grammar.State.Action.Reduce[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] {
            case (
              _,
              _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_4: _root_.slyce.generate.parsers.Grammar.NonTerminal.ListType), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_3: _root_.slyce.generate.parsers.Grammar.Terminal.`)`), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Right(_2: _root_.slyce.generate.parsers.Grammar.NonTerminal.LiftElementList), _) ::
                _root_.slyce.parse.Grammar.StackElement(_root_.scala.Left(_1: _root_.slyce.generate.parsers.Grammar.Terminal.`(`), toState) ::
                stack,
            ) =>
              (toState, _root_.slyce.generate.parsers.Grammar.NonTerminal.AnonList._2(_1, _2, _3, _4), stack)
          }
      },
      onNT = PartialFunction.empty
    )
  
  override val grammar: _root_.slyce.parse.Grammar[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar] =
    _root_.slyce.parse.Grammar[_root_.slyce.generate.parsers.Grammar.Terminal, _root_.slyce.generate.parsers.Grammar.NonTerminal, _root_.slyce.generate.parsers.Grammar.NonTerminal.Grammar](grammarState0)
  
}

// format: on
